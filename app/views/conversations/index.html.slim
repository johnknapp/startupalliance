- content_for :page_title do
  ' Startup Alliance â€“
  ' Private Conversations

- content_for :page_header do
  h2.bold.little-space-top.little-space-bottom.white-text.text-center
    ' Private Conversations
.row
  .medium-10.medium-offset-1.columns
    p.snug-top.space-bottom.text-right
      ' Private conversations with other Startup Alliance members
.row
  .medium-8.medium-offset-2.columns
    - if @conversations.present?
      - @conversations.each do |conversation|
        - unread_count = conversation.messages.where.not(user_id: current_user).where(read: false).count
        - if conversation.sender == current_user or conversation.recipient == current_user
        - if conversation.sender_id == current_user.id
          - interlocutor = conversation.recipient
        - else
          - interlocutor = conversation.sender
        - if conversation.sender.present? and conversation.recipient.present?

          .callout.small.shadow.space-bottom
            .float-right
              ul.dropdown.menu.little-snug-top data-dropdown-menu=true
                li
                  = link_to '#' do
                    i.fa.fa-ellipsis-v.faint
                  ul.menu data-dropdown-menu=true
                    li= link_to conversation_messages_path(conversation) do
                      i.fa.fa-eye.faint
                      | &nbsp;
                      ' View conversation
                    li= link_to conversation, data: { confirm: 'Really destroy entire conversation and all messages?' }, method: :delete do
                      i.fa.fa-trash-o.faint
                      | &nbsp;
                      ' Delete conversation
            p.bold
              = link_to conversation_messages_path(conversation) do
                = image_tag gravatar_url(interlocutor.email, 48)
                | &nbsp;
                | &nbsp;
                = interlocutor.name
            - if unread_count != 0
              .float-right
                p.red-text.pad-right
                  i.fa.fa-lg.fa-envelope
                  | &nbsp;
                  | &nbsp;
                  /span.bold
                  ' #{number_with_delimiter(unread_count)}
            p.faint
              = link_to conversation_messages_path(conversation) do
                ' #{number_with_delimiter(conversation.messages.count)} #{'message'.pluralize(conversation.messages.count)}
                | &nbsp;
                ' (#{time_ago_in_words(conversation.messages.last.created_at)} ago)
    - else
      ' No conversations yet!