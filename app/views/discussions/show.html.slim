.row
  .large-12.columns
    h3.space-top.primary-text
      ' Discussion:
      strong
        ' #{@discussion.topic}
    hr.little-snug-top
    .float-left
      p.snug-top.space-bottom
        - if @discussion.discussable_type == 'Alliance'
          = link_to alliance_path(@discussion.discussable) do
            i.fa.fa-arrow-left
            | &nbsp;
            | &nbsp;
            ' Return to #{@discussion.discussable.name}
        - if @discussion.discussable_type == 'Company'
          = link_to company_path(@discussion.discussable) do
            i.fa.fa-arrow-left
            | &nbsp;
            | &nbsp;
            ' Return to #{@discussion.discussable.name}
    p.snug-top.space-bottom.text-right Ask questions, get answers, share information and ideas

    p.show-for-medium.snug-top &nbsp;

    = render 'partials/new_comment_modal'
    - if @discussion.comments.present?
      - @discussion.comments.each do |comment|
        .callout
          .float-right
            p.faint
              - if current_user and current_user == comment.author or current_user == comment.discussion.discussable.creator
                | &nbsp;
                | &nbsp;
                = link_to edit_discussion_comment_path(discussion_id: @discussion.pid, id: comment.pid) do
                  i.fa.fa-pencil
                | &nbsp;
                | &nbsp;
                | &nbsp;
                = link_to discussion_comment_path(discussion_id: @discussion.pid, id: comment.pid), data: { confirm: 'Really destroy this comment?' }, method: :delete do
                  i.fa.fa-trash-o
          p.faint
            ' #{link_to (image_tag gravatar_url("#{comment.author.email}", 36)), vanity_path(comment.author.username)}
            | &nbsp;
            ' #{link_to comment.author.name, vanity_path(comment.author.username)} #{time_ago_in_words(comment.created_at)} ago
          p.little-snug-top.indented-3= comment.body

          ul.menu.simple.indented-3
            li.faint.reply-toggle data-comment-pid=comment.pid
              /- if comment.replies.present?
              /  ' Show / hide #{comment.replies.count} #{'reply'.pluralize(comment.replies.count)}
            li.faint= render 'partials/new_reply_modal', comment: comment

          .indented-3 id="replies-comment-pid-#{comment.pid}" style='display:none;'
            /- if comment.replies.present?
            /  - comment.replies.each do |reply|
                .callout.small
                  .float-right
                    p.faint
                      - if current_user and current_user == reply.author or current_user == reply.comment.author or current_user == comment.discussion.discussable.creator
                        | &nbsp;
                        | &nbsp;
                        = link_to edit_discussion_comment_reply_path(discussion_id: comment.discussion.pid, comment_id: comment.pid, id: reply.pid) do
                          i.fa.fa-pencil
                        | &nbsp;
                        | &nbsp;
                        | &nbsp;
                        = link_to discussion_comment_reply_path(discussion_id: comment.discussion.pid, comment_id: comment.pid, id: reply.pid), data: { confirm: 'Really destroy this reply?' }, method: :delete do
                          i.fa.fa-trash-o
                  p.faint
                    ' #{link_to (image_tag gravatar_url("#{reply.author.email}", 36)), vanity_path(reply.author.username)}
                    | &nbsp;
                    ' #{link_to reply.author.name, vanity_path(reply.author.username)} #{time_ago_in_words(reply.created_at)} ago
                  p.little-snug-top.indented-3= reply.body
                
            /- else
              .callout.small
                p.text-center No replies yet!

    - else
      .callout
        p.text-center No comments yet!
