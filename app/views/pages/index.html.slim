- if params[:filter]
  - filter = params[:filter]
- elsif params[:query]
  - filter = params[:query]
- elsif params[:state]
  - if params[:state] == 'Suggestion'
    - filter = 'Suggested'
  - else
    - filter = params[:state]
- elsif params[:author_pid]
  - filter = "Authored by #{User.find_by_pid(params[:author_pid]).name}"
- else
  - filter = 'Latest'

- content_for :page_title do
  ' Startup Alliance – Knowledge Base

- content_for :page_header do
  h2.bold.little-space-top.white-text.text-center
    ' Knowledge Base
  h4.bold.medium-grey-text.text-center Filter: “#{filter}”

.row
  .large-12.columns
    .float-left
      = render 'partials/resources_menu'
    p.text-right.snug-top Success building resources from our global entrepreneurial community.

- if !current_user
  .row
    .large-8.large-offset-2.columns
      .callout.snug-bottom
        p.bold Instant access with FREE Associate Membership
        = render 'partials/join_form', acqsrc: 'kb_index'


.row
  .medium-5.columns.medium-push-7
    .float-right.space-top
      a data-open='kb-info'
        i.fa.fa-lg.fa-info-circle
      = render 'partials/quick_ref_kb'
    h5.space-top &nbsp;
    = render 'partials/search_form_kb'
    /- if current_user and current_user.admin?
      - if Page.where(state: 'Flagged').present?
        h4.bold.text-center= link_to "Flagged (#{Page.where(state: 'Flagged').count})", pages_path(state: 'Flagged')
      - if Page.where(state: 'Draft').present?
        h4.bold.text-center= link_to "Draft (#{Page.where(state: 'Draft').count})", pages_path(state: 'Draft')
    p.scale-to-90.little-snug-bottom.text-center Any member can author Knowledge Base Articles.
    = render 'pages/top_page_authors'

  .medium-7.columns.medium-pull-5
    .float-right
      ul.menu.space-top
        li = link_to new_page_path(state: 'Suggestion') do
          i.fa.fa-plus
          | &nbsp;
          ' Suggest an Article
        li= link_to new_page_path do
          i.fa.fa-plus
          | &nbsp;
          ' Author an Article

    ul.space-top.dropdown.menu.bold data-dropdown-menu=true
      li.primary-text
        h5.bold
          = link_to '#' do
            ' Filter the Articles
            | &nbsp;
            i.fa.fa-chevron-down
        ul.menu.normal.shadow-8dp data-dropdown-menu=true
          li.bold= link_to "Flagged (#{Page.where(state: 'Flagged').count})", pages_path(state: 'Flagged'), class: 'red-text' if current_user and current_user.admin? and Page.where(state: 'Flagged').present?
          li.bold= link_to "Draft (#{Page.where(state: 'Draft').count})", pages_path(state: 'Draft'), class: 'red-text'       if current_user and current_user.admin? and Page.where(state: 'Draft').present?
          li.bold= link_to "Latest pages", pages_path
          li.bold= link_to "Authored by me (#{number_with_delimiter(Page.where(author_id: current_user.id).count)})", pages_path(author_pid: current_user.pid), class: 'bold' if current_user
          li.bold= link_to "Suggested pages", pages_path(state: 'Suggestion')
          - @categories.each do |cat|
            li= link_to "#{cat} (#{number_with_delimiter(Page.tagged_with(cat).count)})", pages_path(filter: cat)

    - if @pages.present?
      - @pages.each do |page|
        - if current_user and (page.state == 'Published' or page.state == 'Suggestion' or page.author_id == current_user.id or current_user.admin?)
          = render 'pages/hero', page: page
        - elsif page.state == 'Published' or page.state == 'Suggestion' # no current_user or not admin or not author - only see published and suggestions
          = render 'pages/hero', page: page
    - else
      .callout.accent
        p.bold.text-center Try another filter, or better yet...
        ul.menu.expanded.text-center.snug-top
          li= link_to new_page_path(state: 'Suggestion') do
            i.fa.fa-plus
            | &nbsp;
            ' Suggest an Article
          li= link_to new_page_path do
            i.fa.fa-plus
            | &nbsp;
            ' Author an Article
          li= link_to 'Show the latest', pages_path

