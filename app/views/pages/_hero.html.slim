.callout.accent.shadow.space-bottom
  - if page.state == 'Flagged'
    .float-left
      .little-snug-top= link_to page_path(page) do
        i.fa.fa-flag.red-text
  - elsif page.state == 'Draft'
    .float-left
      .little-snug-top= link_to edit_page_path(page) do
        i.fa.fa-pencil
  - elsif page.state == 'Suggestion'
    .float-left
      .little-snug-top= link_to page_path(page) do
        span.has-tip data-tooltip=true aria-haspopup=true data-click-open='false' title=KB_SUGGESTION_TIP
          i.fa.fa-bell.primary-text
  h4.bold.text-center
    - if page.state == 'Draft'
      = link_to page.title, edit_page_path(page)
    - else
      = link_to page.title, page_path(page)
  - if page.category_list.present?
    p.faint.little-snug-top.text-center
      - page.category_list.each_with_index do |cat, i|
        | #{link_to cat, pages_path(filter: cat)}
        - unless page.category_list.length == i + 1
          ' ,
  - else
    p.faint.little-snug-top.text-center Uncategorized
  .row
    .medium-6.columns
      p.faint.snug-bottom
        - if page.audits.present?
          /' #{page.audits.count.ordinalize} edit: #{page.updated_at.strftime('%b %d, %Y')}
          ' Published #{page.updated_at.strftime('%b %d, %Y')}
          - if page.audits.last.user.present?
            ' by #{link_to page.audits.last.user.name, vanity_path(page.audits.last.user.username)}
        - elsif page.state == 'Suggestion'
          ' Suggested #{page.updated_at.strftime('%b %d, %Y')}
          ' by #{link_to page.author.name, vanity_path(page.author.username)}
        - else
          ' Draft #{page.updated_at.strftime('%b %d, %Y')}
          ' by #{link_to page.author.name, vanity_path(page.author.username)}
    .medium-6.columns
      p.faint.snug-bottom.text-right
        ' (#{number_with_delimiter(page.content.split.size)} words,
        | &nbsp;
        i.fa.fa-thumbs-up.dark-grey-text
        | &nbsp;
        ' #{number_with_delimiter(page.get_likes.size)}
        | &nbsp;
        | &nbsp;
        i.fa.fa-thumbs-down.dark-grey-text
        | &nbsp;
        ' #{number_with_delimiter(page.get_dislikes.size)})
        /' Content length: #{number_with_delimiter(page.content.split.size)} characters
    .space-top= truncate(Nokogiri::HTML(page.content).text, length: 160) if page.state == 'Published'
